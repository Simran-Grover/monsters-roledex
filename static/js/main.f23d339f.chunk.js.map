{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,G,kBAAO,SAACC,GAAD,OAChB,yBAAKC,UAAU,kBACX,yBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,4BAAML,EAAMI,QAAQE,MACpB,4BAAMN,EAAMI,QAAQG,UCHfC,EAAW,SAACR,GACrB,OACA,yBAAKC,UAAU,aACTD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC5B,kBAAC,EAAD,CAAOO,IAAMP,EAAQC,GAAKD,QAAUA,SCL/BQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,2BAAOb,UAAU,SACjBc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BCG,E,kDA/Bb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IALH,E,gEASM,IAAD,OACjBC,MAAM,8CACHC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKC,SAAU,CAAChB,SAASe,S,+BAEnC,IAAD,SAC2BE,KAAKR,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZQ,EAAmBlB,EAASmB,QAAO,SAAAxB,GAAO,OAC9CA,EAAQE,KAAKuB,cAAcC,SAASX,EAAYU,kBAElD,OACE,yBAAK5B,UAAU,OACd,gDACA,kBAAC,EAAD,CACGY,YAAY,kBACZC,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAC9D,kBAAC,EAAD,CAAUxB,SAAUkB,S,GA1BTO,aCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f23d339f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) =>(\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n        <h2>{ props.monster.name }</h2>\r\n        <h2>{ props.monster.email }</h2>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) =>{\r\n    return(\r\n    <div className='card-list'>\r\n        { props.monsters.map(monster => (\r\n        <Card  key={ monster.id } monster={ monster }></Card>\r\n      ) ) }\r\n    </div>\r\n    )}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ( {placeholder, handleChange}) => (\r\n    <input className='search'\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}/>\r\n);","import React, {Component} from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component{\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then( response => response.json())\n      .then( users => this.setState( {monsters:users} ))\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n      <div className=\"App\">\n       <h1>Monsters Rolodex</h1>\n       <SearchBox \n          placeholder=\"Search monsters\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}/>\n       <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}